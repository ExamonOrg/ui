[{"_id":{"$oid":"668461548e5756d0cb5f7a1a"},"correct_answer":"Wanna be startin' somethin'... Hello, world!","function_src":"def moonwalker_says_hello():\n    return \"Wanna be startin' somethin'... Hello, world!\"\n\nprint(moonwalker_says_hello())","hints":[],"metrics":{"calls":[],"categorised_difficulty":"Easy","difficulty":0.0,"imports":[],"loc":4,"lloc":3,"no_of_functions":1,"sloc":3,"arguments":1,"argCount":0,"aliasCount":0,"andCount":0,"annAssignCount":0,"argumentsCount":1,"assignCount":0,"attributeCount":0,"augAssignCount":0,"augLoadCount":0,"augStoreCount":0,"awaitCount":0,"binOpCount":0,"bitAndCount":0,"bitOrCount":0,"bitXorCount":0,"boolOpCount":0,"breakCount":0,"bytesCount":0,"callCount":0,"classDefCount":0,"comprehensionCount":0,"compareCount":0,"constantCount":0,"continueCount":0,"delCount":0,"deleteCount":0,"dictCompCount":0,"dictCount":0,"divCount":0,"ellipsisCount":0,"eqCount":0,"exceptHandlerCount":0,"expressionCount":0,"exprCount":0,"floorDivCount":0,"forCount":0,"formattedValueCount":0,"fromCount":0,"generatorExpCount":0,"globalCount":0,"gtCount":0,"gtECount":0,"ifCount":0,"ifExpCount":0,"importFromCount":0,"inCount":0,"indexCount":0,"intCount":0,"isCount":0,"isNotCount":0,"joinedStrCount":0,"keywordCount":0,"lambdaCount":0,"listCompCount":0,"listCount":0,"loadCount":0,"lShiftCount":0,"ltCount":0,"ltECount":0,"matMultCount":0,"modCount":0,"multCount":0,"nameConstantCount":0,"nameCount":0,"nonlocalCount":0,"notCount":0,"notEqCount":0,"notInCount":0,"numCount":0,"orCount":0,"passCount":0,"powCount":0,"raiseCount":0,"returnCount":0,"rShiftCount":0,"setCompCount":0,"setCount":0,"sliceCount":0,"starredCount":0,"storeCount":0,"strCount":0,"subscriptCount":0,"suiteCount":0,"tryCount":0,"tupleCount":0,"uAddCount":0,"unaryOpCount":0,"uSubCount":0,"whileCount":0,"withCount":0,"withitemCount":0,"yieldCount":0,"yieldFromCount":0},"print_logs":["Wanna be startin' somethin'... Hello, world!"],"choices":["Wanna be startin' something... Goodbye, world!","It's gonna take time","42","Wanna be startin' somethin'... Hello, world!"],"tags":["easy"],"unique_id":"18183248493971092683872186144985"},{"_id":{"$oid":"668461548e5756d0cb5f7a1b"},"correct_answer":"Greetings from Michael Jackson","function_src":"def question01():\n    name = \"Michael Jackson\"\n    return f\"Greetings from {name}\"\n\nprint(question01())","hints":["Not a basketball player","King of Pop","Greetings from Michael Jackson"],"metrics":{"calls":[],"categorised_difficulty":"Easy","difficulty":0.0,"imports":[],"loc":5,"lloc":4,"no_of_functions":1,"sloc":4,"arguments":1,"argCount":0,"aliasCount":0,"andCount":0,"annAssignCount":0,"argumentsCount":1,"assignCount":0,"attributeCount":0,"augAssignCount":0,"augLoadCount":0,"augStoreCount":0,"awaitCount":0,"binOpCount":0,"bitAndCount":0,"bitOrCount":0,"bitXorCount":0,"boolOpCount":0,"breakCount":0,"bytesCount":0,"callCount":0,"classDefCount":0,"comprehensionCount":0,"compareCount":0,"constantCount":0,"continueCount":0,"delCount":0,"deleteCount":0,"dictCompCount":0,"dictCount":0,"divCount":0,"ellipsisCount":0,"eqCount":0,"exceptHandlerCount":0,"expressionCount":0,"exprCount":0,"floorDivCount":0,"forCount":0,"formattedValueCount":0,"fromCount":0,"generatorExpCount":0,"globalCount":0,"gtCount":0,"gtECount":0,"ifCount":0,"ifExpCount":0,"importFromCount":0,"inCount":0,"indexCount":0,"intCount":0,"isCount":0,"isNotCount":0,"joinedStrCount":0,"keywordCount":0,"lambdaCount":0,"listCompCount":0,"listCount":0,"loadCount":0,"lShiftCount":0,"ltCount":0,"ltECount":0,"matMultCount":0,"modCount":0,"multCount":0,"nameConstantCount":0,"nameCount":0,"nonlocalCount":0,"notCount":0,"notEqCount":0,"notInCount":0,"numCount":0,"orCount":0,"passCount":0,"powCount":0,"raiseCount":0,"returnCount":0,"rShiftCount":0,"setCompCount":0,"setCount":0,"sliceCount":0,"starredCount":0,"storeCount":0,"strCount":0,"subscriptCount":0,"suiteCount":0,"tryCount":0,"tupleCount":0,"uAddCount":0,"unaryOpCount":0,"uSubCount":0,"whileCount":0,"withCount":0,"withitemCount":0,"yieldCount":0,"yieldFromCount":0},"print_logs":["Greetings from Michael Jackson"],"choices":["Greetings from John Doe","Hello from Michael Jordan","Waving from Elvis Presley","Greetings from Michael Jackson"],"tags":["easy"],"unique_id":"32924856517053850286485174892435","explanation":"A quiz!\n\nLet's break it down:\n\nThe code defines a function `question01()` that returns a formatted string using an f-string. The string is \"Greetings from {name}\".\n\nWhen you call the function with `print(question01())`, it executes the function and prints the returned string. In this case, the `{name}` placeholder is replaced with the value of the variable `name`, which is set to `\"Michael Jackson\"` inside the function.\n\nSo, the returned string is \"Greetings from Michael Jackson\", which matches one of the options in the quiz: \"Greetings from Michael Jackson\".\n\nNow, let's look at why the other options are incorrect:\n\n* `'Greetings from John Doe'`: This option has a different name (\"John Doe\") than the one used in the function (`\"Michael Jackson\"`).\n* `'Hello from Michael Jordan'`: Although this option also has a name starting with \"Michael\", it's not the same as the one used in the function.\n* `'Waving from Elvis Presley'`: This option has a completely different name (\"Elvis Presley\") and a different greeting (\"Waving\") than what's returned by the function.\n\nIn summary, the correct answer is \"Greetings from Michael Jackson\" because it matches the output of the function exactly. The other options don't match because they have different names or greetings."},{"_id":{"$oid":"668461548e5756d0cb5f7a1c"},"correct_answer":"Thriller Moonwalker","function_src":"def question02():\n    name = \"Moonwalker\"\n    if name == \"Moonwalker\":\n        return f\"Thriller {name}\"\n    return f\"HI\"\n\nprint(question02())","hints":["Michael Jackson was known for","A famous dance move by","Thriller Moonwalker"],"metrics":{"calls":[],"categorised_difficulty":"Medium","difficulty":0.5,"imports":[],"loc":7,"lloc":6,"no_of_functions":1,"sloc":6,"arguments":1,"argCount":0,"aliasCount":0,"andCount":0,"annAssignCount":0,"argumentsCount":1,"assignCount":0,"attributeCount":0,"augAssignCount":0,"augLoadCount":0,"augStoreCount":0,"awaitCount":0,"binOpCount":0,"bitAndCount":0,"bitOrCount":0,"bitXorCount":0,"boolOpCount":0,"breakCount":0,"bytesCount":0,"callCount":0,"classDefCount":0,"comprehensionCount":0,"compareCount":0,"constantCount":0,"continueCount":0,"delCount":0,"deleteCount":0,"dictCompCount":0,"dictCount":0,"divCount":0,"ellipsisCount":0,"eqCount":0,"exceptHandlerCount":0,"expressionCount":0,"exprCount":0,"floorDivCount":0,"forCount":0,"formattedValueCount":0,"fromCount":0,"generatorExpCount":0,"globalCount":0,"gtCount":0,"gtECount":0,"ifCount":0,"ifExpCount":0,"importFromCount":0,"inCount":0,"indexCount":0,"intCount":0,"isCount":0,"isNotCount":0,"joinedStrCount":0,"keywordCount":0,"lambdaCount":0,"listCompCount":0,"listCount":0,"loadCount":0,"lShiftCount":0,"ltCount":0,"ltECount":0,"matMultCount":0,"modCount":0,"multCount":0,"nameConstantCount":0,"nameCount":0,"nonlocalCount":0,"notCount":0,"notEqCount":0,"notInCount":0,"numCount":0,"orCount":0,"passCount":0,"powCount":0,"raiseCount":0,"returnCount":0,"rShiftCount":0,"setCompCount":0,"setCount":0,"sliceCount":0,"starredCount":0,"storeCount":0,"strCount":0,"subscriptCount":0,"suiteCount":0,"tryCount":0,"tupleCount":0,"uAddCount":0,"unaryOpCount":0,"uSubCount":0,"whileCount":0,"withCount":0,"withitemCount":0,"yieldCount":0,"yieldFromCount":0},"print_logs":["Thriller Moonwalker"],"choices":["Thriller","Superstar","Disco","Thriller Moonwalker"],"tags":["easy"],"unique_id":"16352761070470000764221000819572","explanation":"A nice and simple quiz!\n\nThe code returns \"Thriller Moonwalker\" because of the following:\n\n1. The function `question02()` sets a variable `name` to the string `\"Moonwalker\"`.\n2. The `if` statement checks if the value of `name` is equal to `\"Moonwalker\"`. Since it is, the condition evaluates to `True`.\n3. When the condition is `True`, the function returns the string `f\"Thriller {name}\"`. In this case, `{name}` is replaced with the value of `name`, which is `\"Moonwalker\"`. So, the returned string is `\"Thriller Moonwalker\"`.\n\nNow, let's discuss why the other options are not correct:\n\n* `'Thriller'`: This option is incorrect because it doesn't match the condition in the `if` statement. The condition checks if the value of `name` is equal to `\"Moonwalker\"`, but `'Thriller'` is not equal to `\"Moonwalker\"`.\n* `'Superstar'`: Same reason as above - this option doesn't match the condition.\n* `'Disco'`: Again, this option doesn't match the condition.\n* However, it's worth noting that if you were to change the `if` statement to `if name == \"Thriller\":`, then `'Thriller'` would be a correct answer!"},{"_id":{"$oid":"668461548e5756d0cb5f7a1d"},"correct_answer":"He is remembered as Michael Jackson","function_src":"def question02():\n    moonwalker = \"Michael Jackson\"\n    if moonwalker == \"Moonwalker\":\n        return f\"{moonwalker} was the King of Pop!\"\n    else:\n        return f\"He is remembered as {moonwalker}\"\n\nprint(question02())","hints":["He was known for his music","The King of Pop had a different name","He is remembered as Michael Jackson"],"metrics":{"calls":[],"categorised_difficulty":"Medium","difficulty":0.5,"imports":[],"loc":8,"lloc":7,"no_of_functions":1,"sloc":7,"arguments":1,"argCount":0,"aliasCount":0,"andCount":0,"annAssignCount":0,"argumentsCount":1,"assignCount":0,"attributeCount":0,"augAssignCount":0,"augLoadCount":0,"augStoreCount":0,"awaitCount":0,"binOpCount":0,"bitAndCount":0,"bitOrCount":0,"bitXorCount":0,"boolOpCount":0,"breakCount":0,"bytesCount":0,"callCount":0,"classDefCount":0,"comprehensionCount":0,"compareCount":0,"constantCount":0,"continueCount":0,"delCount":0,"deleteCount":0,"dictCompCount":0,"dictCount":0,"divCount":0,"ellipsisCount":0,"eqCount":0,"exceptHandlerCount":0,"expressionCount":0,"exprCount":0,"floorDivCount":0,"forCount":0,"formattedValueCount":0,"fromCount":0,"generatorExpCount":0,"globalCount":0,"gtCount":0,"gtECount":0,"ifCount":0,"ifExpCount":0,"importFromCount":0,"inCount":0,"indexCount":0,"intCount":0,"isCount":0,"isNotCount":0,"joinedStrCount":0,"keywordCount":0,"lambdaCount":0,"listCompCount":0,"listCount":0,"loadCount":0,"lShiftCount":0,"ltCount":0,"ltECount":0,"matMultCount":0,"modCount":0,"multCount":0,"nameConstantCount":0,"nameCount":0,"nonlocalCount":0,"notCount":0,"notEqCount":0,"notInCount":0,"numCount":0,"orCount":0,"passCount":0,"powCount":0,"raiseCount":0,"returnCount":0,"rShiftCount":0,"setCompCount":0,"setCount":0,"sliceCount":0,"starredCount":0,"storeCount":0,"strCount":0,"subscriptCount":0,"suiteCount":0,"tryCount":0,"tupleCount":0,"uAddCount":0,"unaryOpCount":0,"uSubCount":0,"whileCount":0,"withCount":0,"withitemCount":0,"yieldCount":0,"yieldFromCount":0},"print_logs":["He is remembered as Michael Jackson"],"choices":["He was known for his dance moves","Michael Jackson was an astronaut","The King of Pop died young","He is remembered as Michael Jackson"],"tags":["easy"],"unique_id":"22134455747663991686805842595139","explanation":"A great question about a legendary person!\n\nThe code returns \"He is remembered as Michael Jackson\" because the condition `if moonwalker == \"Moonwalker\":` is not met. The variable `moonwalker` is initialized with the string `\"Michael Jackson\"` (not `\"Moonwalker\"`), so the `else` block is executed.\n\nThis makes sense, as Moonwalker was actually a nickname of Michael Jackson, but it's not the same thing. Michael Jackson was a world-renowned musician, singer, and dancer, while \"Moonwalker\" is a reference to one of his iconic music videos.\n\nNow, let's examine why the other options are incorrect:\n\n* ['He was known for his dance moves']: While true, this option doesn't specifically state that the person being referred to is Michael Jackson.\n* 'Michael Jackson was an astronaut': This is completely false! Michael Jackson was a musician and entertainer, not an astronaut. He did have a music video inspired by space travel (the \"Moonwalker\" video), but he never went to space himself.\n* 'The King of Pop died young': While true that Michael Jackson passed away at a relatively young age (50), this option doesn't specifically state that the person being referred to is Michael Jackson.\n\nSo, all in all, the correct answer \"He is remembered as Michael Jackson\" because it accurately reflects the fact that the question is about Michael Jackson's legacy and not his nickname or some other aspect of his life."},{"_id":{"$oid":"668461548e5756d0cb5f7a1e"},"correct_answer":"Off the wall Michael Jackson","function_src":"def question02():\n    name = \"Michael Jackson\"\n    if name == \"Thriller\" or name == \"Michael Jackson\":\n        return f\"Off the wall {name}\"\n    else:\n        return f\"Walking\"\n\nprint(question02())","hints":["On the charts","Off the hook","Off the wall Michael Jackson"],"metrics":{"calls":[],"categorised_difficulty":"Hard","difficulty":1.2,"imports":[],"loc":8,"lloc":7,"no_of_functions":1,"sloc":7,"arguments":1,"argCount":0,"aliasCount":0,"andCount":0,"annAssignCount":0,"argumentsCount":1,"assignCount":0,"attributeCount":0,"augAssignCount":0,"augLoadCount":0,"augStoreCount":0,"awaitCount":0,"binOpCount":0,"bitAndCount":0,"bitOrCount":0,"bitXorCount":0,"boolOpCount":0,"breakCount":0,"bytesCount":0,"callCount":0,"classDefCount":0,"comprehensionCount":0,"compareCount":0,"constantCount":0,"continueCount":0,"delCount":0,"deleteCount":0,"dictCompCount":0,"dictCount":0,"divCount":0,"ellipsisCount":0,"eqCount":0,"exceptHandlerCount":0,"expressionCount":0,"exprCount":0,"floorDivCount":0,"forCount":0,"formattedValueCount":0,"fromCount":0,"generatorExpCount":0,"globalCount":0,"gtCount":0,"gtECount":0,"ifCount":0,"ifExpCount":0,"importFromCount":0,"inCount":0,"indexCount":0,"intCount":0,"isCount":0,"isNotCount":0,"joinedStrCount":0,"keywordCount":0,"lambdaCount":0,"listCompCount":0,"listCount":0,"loadCount":0,"lShiftCount":0,"ltCount":0,"ltECount":0,"matMultCount":0,"modCount":0,"multCount":0,"nameConstantCount":0,"nameCount":0,"nonlocalCount":0,"notCount":0,"notEqCount":0,"notInCount":0,"numCount":0,"orCount":0,"passCount":0,"powCount":0,"raiseCount":0,"returnCount":0,"rShiftCount":0,"setCompCount":0,"setCount":0,"sliceCount":0,"starredCount":0,"storeCount":0,"strCount":0,"subscriptCount":0,"suiteCount":0,"tryCount":0,"tupleCount":0,"uAddCount":0,"unaryOpCount":0,"uSubCount":0,"whileCount":0,"withCount":0,"withitemCount":0,"yieldCount":0,"yieldFromCount":0},"print_logs":["Off the wall Michael Jackson"],"choices":["Off the hook Michael Jackson","Off the charts Michael Jackson","On the floor","Off the wall Michael Jackson"],"tags":["easy"],"unique_id":"10104256589684376440355137754261","explanation":"A great question about Python's `or` operator!\n\nLet's break it down:\n\n1. The condition in the `if` statement is: `name == \"Thriller\" or name == \"Michael Jackson\"`\n2. In Python, `or` has a higher precedence than the `==` operator. This means that the expression is evaluated as follows:\n\t* First, check if `name == \"Thriller\"`. Since `name` is actually `\"Michael Jackson\"`, this condition is False.\n\t* Then, check if `name == \"Michael Jackson\"` (the second part of the `or` statement). Since `name` is indeed `\"Michael Jackson\"`, this condition is True.\n3. When the `or` expression evaluates to True, the entire condition is considered True, and the code inside the `if` block is executed.\n\nSo, why is \"Off the wall Michael Jackson\" correct?\n\nBecause the condition in the `if` statement matches: `name == \"Michael Jackson\"` is True, which means the code inside the `if` block (`return f\"Off the wall {name}\"`) is executed, returning the desired result.\n\nNow, let's talk about why the other options are not correct:\n\n* ['Off the hook Michael Jackson', 'Off the charts Michael Jackson']: These options are not correct because they do not match the condition in the `if` statement. The `or` operator only checks if `name == \"Thriller\"` or `name == \"Michael Jackson\"`, but these options are neither of those.\n* 'On the floor': This option is not even considered, as it's not part of the `or` expression.\n\nIn summary, the correct answer is \"Off the wall Michael Jackson\" because the condition in the `if` statement matches: `name == \"Michael Jackson\"` is True. The other options are incorrect because they do not match the condition or are not even considered due to the way the `or` operator works."},{"_id":{"$oid":"668461548e5756d0cb5f7a1f"},"correct_answer":"Thriller Night","function_src":"def question02():\n    music_style = \"Pop or Rock\"\n    if music_style == \"Rock\":\n        return f\"The King of {music_style} is here, {music_style}\"\n    elif music_style == \"Pop\":\n        return f\"The one and only {music_style} master is back\"\n\n    return f\"Thriller Night\"\n\nprint(question02())","hints":["The King of","one and only master","Thriller Night"],"metrics":{"calls":[],"categorised_difficulty":"Medium","difficulty":0.67,"imports":[],"loc":10,"lloc":8,"no_of_functions":1,"sloc":8,"arguments":1,"argCount":0,"aliasCount":0,"andCount":0,"annAssignCount":0,"argumentsCount":1,"assignCount":0,"attributeCount":0,"augAssignCount":0,"augLoadCount":0,"augStoreCount":0,"awaitCount":0,"binOpCount":0,"bitAndCount":0,"bitOrCount":0,"bitXorCount":0,"boolOpCount":0,"breakCount":0,"bytesCount":0,"callCount":0,"classDefCount":0,"comprehensionCount":0,"compareCount":0,"constantCount":0,"continueCount":0,"delCount":0,"deleteCount":0,"dictCompCount":0,"dictCount":0,"divCount":0,"ellipsisCount":0,"eqCount":0,"exceptHandlerCount":0,"expressionCount":0,"exprCount":0,"floorDivCount":0,"forCount":0,"formattedValueCount":0,"fromCount":0,"generatorExpCount":0,"globalCount":0,"gtCount":0,"gtECount":0,"ifCount":0,"ifExpCount":0,"importFromCount":0,"inCount":0,"indexCount":0,"intCount":0,"isCount":0,"isNotCount":0,"joinedStrCount":0,"keywordCount":0,"lambdaCount":0,"listCompCount":0,"listCount":0,"loadCount":0,"lShiftCount":0,"ltCount":0,"ltECount":0,"matMultCount":0,"modCount":0,"multCount":0,"nameConstantCount":0,"nameCount":0,"nonlocalCount":0,"notCount":0,"notEqCount":0,"notInCount":0,"numCount":0,"orCount":0,"passCount":0,"powCount":0,"raiseCount":0,"returnCount":0,"rShiftCount":0,"setCompCount":0,"setCount":0,"sliceCount":0,"starredCount":0,"storeCount":0,"strCount":0,"subscriptCount":0,"suiteCount":0,"tryCount":0,"tupleCount":0,"uAddCount":0,"unaryOpCount":0,"uSubCount":0,"whileCount":0,"withCount":0,"withitemCount":0,"yieldCount":0,"yieldFromCount":0},"print_logs":["Thriller Night"],"choices":["Thriller Show","Rockstar Night","Music Frenzy","Thriller Night"],"tags":["easy"],"unique_id":"10259239846263130376266537873387","explanation":"A nice little quiz!\n\nLet's break down why \"Thriller Night\" is the correct answer:\n\n1. The code defines a function `question02()` that takes no arguments.\n2. Inside the function, it sets a variable `music_style` to `\"Pop or Rock\"`.\n3. The code then checks if `music_style` equals `\"Rock\"` using an `if` statement. Since `\"Pop or Rock\"` is not equal to `\"Rock\"`, this condition is False.\n4. Next, it checks the `elif` clause, which compares `music_style` to `\"Pop\"`. Again, since `\"Pop or Rock\"` is not equal to `\"Pop\"`, this condition is also False.\n5. Since neither of the previous conditions were True, the code falls back to the default return statement: `\"Thriller Night\"`.\n\nNow, let's explain why the other options are incorrect:\n\n* `'Thriller Show'`: The code doesn't mention anything about a \"thrill\" or a show, and the `music_style` is not `\"Rock\"` or `\"Pop\"`, so this option is unrelated to the code.\n* `'Rockstar Night'`: Although this option is related to music, it's not the correct answer because the code checks for specific music styles (`\"Rock\"` and `\"Pop\"`) which don't match this option.\n* `'Music Frenzy'`: Similar to the previous options, this one doesn't match the conditions checked in the code (specifically, the `music_style` variable).\n\nIn summary, \"Thriller Night\" is the correct answer because it matches the default return statement when neither of the specific music styles (`\"Rock\"` and `\"Pop\"`) are matched."}]